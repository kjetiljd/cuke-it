plugins {
    id 'se.patrikerdes.use-latest-versions' version '0.2.7'
    id 'com.github.ben-manes.versions' version '0.20.0'
}

apply plugin: 'java'
apply plugin: 'maven'

group = 'demo'
version = '0.1-SNAPSHOT'

description = """cuke-it"""

sourceCompatibility = 11
targetCompatibility = 11
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

configurations {
    featureTestRuntime
    featureTestRuntime.extendsFrom testRuntime

    featureTestCompile
    featureTestCompile.extendsFrom testCompile
}

configurations.all {
}

repositories {
    maven { url "http://repo.maven.apache.org/maven2" }
}

sourceSets {
    test {
        java {
            exclude 'src/feature-test/**'
        }
        resources {
            exclude 'src/feature-test/**'
        }
    }

    featureTest {
        java {
            srcDir 'src/feature-test/java/'
        }
        resources {
            srcDir 'src/feature-test/resources'
        }
    }
}


dependencies {
    compile group: 'io.ratpack', name: 'ratpack-core', version:'1.6.0'
    compile group: 'com.sun.activation', name: 'javax.activation', version:'1.2.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version:'5.3.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version:'5.3.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version:'5.3.2'
    testCompile group: 'org.apache.httpcomponents', name: 'fluent-hc', version:'4.5.6'

    featureTestCompile group: 'io.cucumber', name: 'cucumber-java', version:'4.2.0'
    featureTestCompile group: 'io.cucumber', name: 'cucumber-junit', version:'4.2.0'
    featureTestCompile group: 'org.junit.vintage', name: 'junit-vintage-engine', version:'5.3.2'

    featureTestCompile sourceSets.test.output
    featureTestCompile sourceSets.main.output
    featureTestCompile configurations.testCompile
    featureTestRuntime configurations.testRuntime
}


task featureTest(type: Test) {
    group = LifecycleBasePlugin.VERIFICATION_GROUP
    description = 'Runs the feature tests.'

    testClassesDirs = sourceSets.featureTest.output.classesDirs
    classpath = sourceSets.featureTest.runtimeClasspath

    reports.html.destination = file("${buildDir}/reports/feature-tests")
    reports.junitXml.destination = file("${buildDir}/feature-test-results")

    doFirst {
        // Anything?
    }
}

build.dependsOn featureTest
featureTest.dependsOn assemble

/* https://github.com/ben-manes/gradle-versions-plugin */
dependencyUpdates {
    resolutionStrategy {
        componentSelection { rules ->
            rules.all { ComponentSelection selection ->
                boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview'].any { qualifier ->
                    selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
                }
                if (rejected) {
                    selection.reject('Not a real release')
                }
            }
        }
    }
    revision = 'release'
}